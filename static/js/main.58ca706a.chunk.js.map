{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButtons","Chat","message","profilePic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","placeholder","type","preventDefault","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58ca706a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Link , useHistory } from \"react-router-dom\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\n\r\nfunction Header({ backButton }) {\r\n  const history=useHistory();\r\n  return (\r\n    <div className=\"header\">\r\n      {backButton ? (\r\n        <IconButton onClick={()=>history.replace(backButton)}>\r\n          <ArrowBackIosIcon fontSize=\"large\" className=\"header_icon\" />\r\n        </IconButton>\r\n      ) : (\r\n        <IconButton>\r\n          <PersonIcon className=\"header_icon\" fontSize=\"large\" />\r\n        </IconButton>\r\n      )}\r\n      <Link to=\"/\">\r\n        <img className=\"header_logo\" src=\"https://uxwing.com/wp-content/themes/uxwing/download/10-brands-and-social-media/tinder.svg\" alt=\"tinder logo\" />\r\n      </Link>\r\n      <Link to=\"/chat\">\r\n        <IconButton>\r\n          <ForumIcon className=\"header_icon\" fontSize=\"large\" />\r\n        </IconButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBb7rkaA7OJI5mJsrSCyxBAqoD2_UOrSy0\",\r\n  authDomain: \"tinder-clone-nav.firebaseapp.com\",\r\n  projectId: \"tinder-clone-nav\",\r\n  storageBucket: \"tinder-clone-nav.appspot.com\",\r\n  messagingSenderId: \"82391983804\",\r\n  appId: \"1:82391983804:web:ac02568644bc922abb52b9\",\r\n  measurementId: \"G-TS0SL4T5E5\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst database = firebaseApp.firestore();\r\n\r\nexport default database;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport database from \"./firebase\";\r\nimport \"./TinderCard.css\"\r\n\r\nfunction TinderCards() {\r\n  const [people, setPeople] = useState([]);\r\n  useEffect(() => {\r\n     database.collection('people').onSnapshot((snapshot)=>(\r\n       setPeople(snapshot.docs.map(doc => doc.data()))\r\n     ))\r\n  }, [people])\r\n  return (\r\n    <div className=\"tinderCard\">\r\n        <div className=\"tinderCards_cardContainer\">\r\n\r\n      {people.map((person) => (\r\n        <TinderCard\r\n          className=\"swipe\"\r\n          key={person.name}\r\n          preventSwipe={[\"up\", \"down\"]}\r\n        >\r\n          <div\r\n            style={{ backgroundImage: `url(${person.url})` }}\r\n            className=\"card\"\r\n          >\r\n            <h3>{person.name}</h3>\r\n          </div>\r\n        </TinderCard>\r\n      ))}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from \"react\";\r\nimport \"./SwipeButtons.css\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nconst SwipeButtons = () => {\r\n  return (\r\n    <div className=\"swipeButtons\">\r\n      <IconButton className=\"swipeButtons_repeat\">\r\n        <ReplayIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons_left\">\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons_rate\">\r\n        <StarRateIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons_right\">\r\n        <FavoriteIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <IconButton className=\"swipeButtons_lightning\">\r\n        <FlashOnIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwipeButtons;\r\n","import React from \"react\";\r\nimport \"./Chat.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Chat = ({ name, message, profilePic, timestamp }) => {\r\n  return (\r\n    <Link to={`/chat/${name}`}>\r\n      <div className=\"chat\">\r\n        <Avatar className=\"chat_image\" src={profilePic}>\r\n          {name[0]}\r\n        </Avatar>\r\n        <div className=\"chat_details\">\r\n          <h2>{name}</h2>\r\n          <p>{message}</p>\r\n        </div>\r\n        <p>{timestamp}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react'\r\nimport Chat from './Chat'\r\nimport \"./Chats.css\"\r\n\r\nconst Chats = () => {\r\n    return (\r\n        <div className=\"chats\">\r\n            <Chat \r\n            name= \"Helen\"\r\n            message=\"Hey whats up!\"\r\n            timestamp=\"40 seconds ago\"\r\n            profilePic=\"https://material-ui.com/static/images/avatar/3.jpg\"\r\n            \r\n            />\r\n            <Chat \r\n            name= \"Brock\"\r\n            message=\"Hey whats up!\"\r\n            timestamp=\"4 hours ago\"\r\n            profilePic=\"https://material-ui.com//static/images/avatar/2.jpg\"\r\n            \r\n            />\r\n            <Chat \r\n            name= \"Tony\"\r\n            message=\"Hey whats up!\"\r\n            timestamp=\"3 days ago\"\r\n            profilePic=\"https://material-ui.com/static/images/avatar/1.jpg\"\r\n            \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport \"./ChatScreen.css\";\r\n\r\nconst ChatScreen = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      name: \"Brock\",\r\n      image: \"https://material-ui.com//static/images/avatar/2.jpg\",\r\n      message: \"Hey whats up\",\r\n    },\r\n    {\r\n      name: \"Brock\",\r\n      image: \"https://material-ui.com//static/images/avatar/2.jpg\",\r\n      message: \"Hows it going\",\r\n    },\r\n    {\r\n      message: \"Hi! How are you Brock\",\r\n    },\r\n  ]);\r\n  const handleSend = (e)=>{\r\n      e.preventDefault();\r\n      setMessages([...messages,{message:input}])\r\n      setInput('')\r\n  }\r\n  return (\r\n    <div>\r\n      <p className=\"chatScreen_timestamp\">\r\n        YOU MATCHED WITH BROCK ON 09/06/21\r\n      </p>\r\n      {messages.map((message) =>\r\n        message.name ? (\r\n          <div className=\"chatScreen_message\">\r\n            <Avatar\r\n              alt={message.name}\r\n              className=\"chatScreen_image\"\r\n              src={message.image}\r\n            ></Avatar>\r\n            <p className=\"chatScreen_text\">{message.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"chatScreen_message\">\r\n            <p className=\"chatScreen_textUser\">{message.message}</p>\r\n          </div>\r\n        )\r\n      )}\r\n      <div>\r\n        <form className=\"chatScreen_input\">\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            className=\"chatScreen_inputField\"\r\n            placeholder=\"Type a message ...\"\r\n            type=\"text\"\r\n          />\r\n          <button type=\"submit\" onClick={handleSend} className=\"chatScreen_inputButton\">SEND</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n","import \"./App.css\";\nimport Header from \"./Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport Chats from \"./Chats\";\nimport ChatScreen from \"./ChatScreen\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/chat/:person\">\n            <Header backButton=\"/chat\" />\n            <ChatScreen />\n          </Route>\n          <Route path=\"/chat\">\n            <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          <Route path=\"/\">\n            <Header />\n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}